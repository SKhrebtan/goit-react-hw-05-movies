{"version":3,"file":"static/js/849.d68e9e63.chunk.js","mappings":"uPAMMA,GAAYC,EAAAA,EAAAA,OAAK,kBAAM,4BAA8C,IAyC3E,EAvCa,WACT,IAAAC,GAA4BC,EAAAA,EAAAA,UAAS,QAAOC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAArCI,EAAMF,EAAA,GAAEG,EAASH,EAAA,GACxBI,GAA0BL,EAAAA,EAAAA,UAAS,MAAKM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAjCE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GACtBG,GAA0BT,EAAAA,EAAAA,UAAS,IAAGU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAA/BE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GA0BtB,OAvBAG,EAAAA,EAAAA,YAAU,WACNT,EAAU,WCZXU,MAAM,yDAADC,OAHA,qCDiBIC,MAAK,SAAAC,GACb,OAAIA,EAASC,GACHD,EAASE,OAEZC,QAAQC,OACb,IAAIC,MAAM,wLAEL,IACQN,MAAK,SAAAO,GAAiC,IAA9BC,EAAOD,EAAPC,QAASC,EAAaF,EAAbE,cACdb,GAAQc,EAAAA,EAAAA,GAAKF,GACbpB,GAAU,SAAAD,GAAM,OAAsB,IAAlBsB,EAAsB,QAAU,UAAU,IAElE,IACVE,OAAM,SAAApB,GACVC,EAASD,GACTH,EAAU,WACZ,GAED,GAAE,KAGCwB,EAAAA,EAAAA,MAAA,OAAAC,SAAA,CACgB,SAAX1B,IAAqB2B,EAAAA,EAAAA,KAACC,EAAAA,GAAY,IACvB,aAAX5B,IAAyB2B,EAAAA,EAAAA,KAAA,OAAKE,IAAKC,EAAUC,IAAK3B,IACvC,aAAXJ,IAAyB2B,EAAAA,EAAAA,KAACjC,EAAS,CAACsC,OAAQxB,MAIzD,C","sources":["pages/Home/Home.jsx","components/Fetches/FetchMovies.jsx"],"sourcesContent":["import { useEffect, useState, lazy } from 'react';\nimport PropTypes from 'prop-types';\nimport FetchMovies from '../../components/Fetches/FetchMovies';\nimport { RevolvingDot } from 'react-loader-spinner';\nimport errorImg from '../../images/error.jpg';\n \nconst MovieList = lazy(() => import('../../components/MovieList/MovieList'))\n\nconst Home = () => {\n    const [status, setStatus] = useState('idle');\n    const [error, setError] = useState(null)\n    const [films, setFilms] = useState([]);\n    \n     \n    useEffect(() => {\n        setStatus('pending');\n                  FetchMovies()\n               .then(response => {\n        if (response.ok) {\n           return response.json();\n        }\n        return Promise.reject(\n          new Error('Щось пішло не так, повторіть спробу')\n        );\n               })\n                      .then(({ results, total_results }) => {\n                          setFilms([...results],\n                          setStatus(status => total_results === 0 ? 'empty' : 'resolved')\n                          )\n                      })\n           .catch(error => { \n        setError(error);\n        setStatus('rejected')\n      }\n    )\n     },[])\n    \n    return (\n        <div>\n            {status === 'idle' && <RevolvingDot />}\n            {status === 'rejected' && <img src={errorImg} alt={error}></img>}\n            {status === 'resolved' && <MovieList movies={films} />}\n            \n        </div>\n    )\n}\n\nexport default Home;\n\nHome.propTypes = {\n    status: PropTypes.string,\n    error: PropTypes.string,\n    films: PropTypes.array,\n}","const key = '7704615e0d5baf851bf04ec2239749fe';\n\nexport default function FetchMovies () {\nreturn fetch(`https://api.themoviedb.org/3/trending/all/day?api_key=${key}`)\n}\n"],"names":["MovieList","lazy","_useState","useState","_useState2","_slicedToArray","status","setStatus","_useState3","_useState4","error","setError","_useState5","_useState6","films","setFilms","useEffect","fetch","concat","then","response","ok","json","Promise","reject","Error","_ref","results","total_results","_toConsumableArray","catch","_jsxs","children","_jsx","RevolvingDot","src","errorImg","alt","movies"],"sourceRoot":""}