{"version":3,"file":"static/js/134.2dc7180c.chunk.js","mappings":"uMACMA,GAAYC,EAAAA,EAAAA,OAAK,kBAAM,4BAAN,IACjBC,GAAYD,EAAAA,EAAAA,OAAK,kBAAM,4BAAN,IACRE,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA0BC,GAA1B,yFACoCC,MAAM,mDAAD,OAAoDD,EAApD,qDADzC,cACmBE,EADnB,gBAEgCA,EAASC,OAFzC,cAEmBC,EAFnB,yBAIoBA,GAJpB,kEAwBA,UAlBe,WACX,OAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOL,EAAP,KAAcM,EAAd,KACA,GAA4BD,EAAAA,EAAAA,UAAS,IAArC,eAAOE,EAAP,KAAeC,EAAf,KASA,OAJAC,EAAAA,EAAAA,YAAU,WACHT,GAfX,SAC0B,GAAXD,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAePA,CAAWC,GAAOU,MAAK,gBAAEC,EAAF,EAAEA,QAAF,OAAaH,EAAUG,EAAvB,GAC1B,GAAC,CAACX,KAEC,4BACI,SAACJ,EAAD,CAAWgB,SATnB,SAAsBC,GAClBP,EAASO,EACZ,KAQO,SAACf,EAAD,CAAWgB,OAAQP,MAE9B,C,sBCzBD,SAASQ,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBtB,EAAQuB,EAAKvB,KAInB,CAHE,MAAOwB,GAEP,YADAN,EAAOM,EAET,CAEID,EAAKE,KACPR,EAAQjB,GAER0B,QAAQT,QAAQjB,GAAOU,KAAKS,EAAOC,EAEvC,CAEe,SAASO,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAOC,UACX,OAAO,IAAIN,SAAQ,SAAUT,EAASC,GACpC,IAAIF,EAAMY,EAAGK,MAAMJ,EAAME,GAEzB,SAASZ,EAAMnB,GACbe,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQpB,EAClE,CAEA,SAASoB,EAAOc,GACdnB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASc,EACnE,CAEAf,OAAMgB,EACR,GACF,CACF,C","sources":["pages/Movies.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["import { lazy, useState, useEffect } from \"react\";\nconst Searchbar = lazy(() => import('../components/Searchbar/Searchbar'))\nconst MovieList = lazy(() => import('../components/MovieList/MovieList'))\nasync function FetchFilms(value) {\n             const response = await fetch(`https://api.themoviedb.org/3/search/movie?query=${value}&api_key=7704615e0d5baf851bf04ec2239749fe&page=1`);\n             const data = await response.json();\n   \n             return data\n}\nconst Movies = () => {\n    const [value, setValue] = useState('')\n    const [result, setResult] = useState([])\n \n    function handleSubmit(a) {\n        setValue(a)\n    }\n    useEffect(() => {\n        if(value)\n        FetchFilms(value).then(({results})=>setResult(results))\n    },[value])\n    return (\n        <div>\n            <Searchbar onSubmit={handleSubmit} />\n            <MovieList movies={result}/>\n    </div>)\n}\n\nexport default Movies;","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["Searchbar","lazy","MovieList","FetchFilms","value","fetch","response","json","data","useState","setValue","result","setResult","useEffect","then","results","onSubmit","a","movies","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","error","done","Promise","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}