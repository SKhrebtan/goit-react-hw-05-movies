{"version":3,"file":"static/js/126.af9e114f.chunk.js","mappings":"6OAEaA,EAAOC,EAAAA,GAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,qHAShBC,GAAgBH,EAAAA,EAAAA,IAAOI,EAAAA,GAAPJ,CAAeK,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,gtBA8B/BI,EAAWN,EAAAA,GAAAA,GAASO,IAAAA,GAAAL,EAAAA,EAAAA,GAAA,gBAMpBM,EAAQR,EAAAA,GAAAA,IAAUS,IAAAA,GAAAP,EAAAA,EAAAA,GAAA,6EAOlBQ,EAAQV,EAAAA,GAAAA,GAASW,IAAAA,GAAAT,EAAAA,EAAAA,GAAA,wCAKjBU,EAAOZ,EAAAA,GAAAA,EAAQa,IAAAA,GAAAX,EAAAA,EAAAA,GAAA,sCAIfY,EAAQd,EAAAA,GAAAA,IAAUe,IAAAA,GAAAb,EAAAA,EAAAA,GAAA,wB,SC3DhB,SAASc,EAAQC,GAAY,IAATC,EAAID,EAAJC,KAC5B,OACCC,EAAAA,EAAAA,KAACpB,EAAI,CAAAqB,SACDF,EAAKG,KAAI,SAAAC,GAA4C,IAAzCC,EAAED,EAAFC,GAAIC,EAAIF,EAAJE,KAAMC,EAASH,EAATG,UAAWC,EAAYJ,EAAZI,aAE9B,OADCC,QAAQC,IAAIF,IAETP,EAAAA,EAAAA,KAAChB,EAAa,CAAC0B,GAAE,UAAAC,OAAYP,GAAKH,UAC7BW,EAAAA,EAAAA,MAACzB,EAAQ,CAAAc,SAAA,EACVD,EAAAA,EAAAA,KAACL,EAAK,CAAAM,SAAmB,OAAjBM,GACDP,EAAAA,EAAAA,KAACX,EAAK,CAACwB,IAAKC,EAASC,IAAI,aACzBf,EAAAA,EAAAA,KAACX,EAAK,CAACwB,IAAG,mCAAAF,OAAqCJ,GAAgBQ,IAAKV,OAC1EL,EAAAA,EAAAA,KAACT,EAAK,CAAAU,SAAEI,KACRL,EAAAA,EAAAA,KAACP,EAAI,CAAAQ,SAAEK,MALQF,IAU3B,KAGZ,C","sources":["components/CastList/CastList.styled.js","components/CastList/CastList.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport {NavLink} from 'react-router-dom'\nexport const List = styled.ul`\ndisplay: flex;\nflex-wrap: wrap;\ngap: 10px;\nlist-style: none;\nmargin:0;\nmargin-top: 15px;\npadding:0;\n`\nexport const StyledNavLink = styled(NavLink)`\nwidth: 300px;\n@media screen and (min-width: 400px){\n    width: calc((100% - 10px) / 2);\n}\n@media screen and (min-width: 600px){\n    width: calc((100% - 20px) / 3);\n}\n@media screen and (min-width: 800px){\n    width: calc((100% - 30px) / 4);\n}\n@media screen and (min-width: 1000px){\n    width: calc((100% - 40px) / 5);\n}\n@media screen and (min-width: 1222px){\n    width: calc((100% - 50px) / 6);\n}\n\ntext-align: center;\n box-shadow: 0px 2px 1px -1px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12);\n     transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n     &:hover {\n     transform: scale(1.03);\n   }\n   text-decoration: none;\n\n`\n\n\nexport const ListItem = styled.li`\n\n\n\n`\n\nexport const Image = styled.img`\ndisplay: block;\nwidth: 100%;\nheight: 314px;\nobject-fit: cover;\n`\n\nexport const Title = styled.h2`\nmargin: 5px 0;\ncolor:black;\n`\n\nexport const Text = styled.p`\nmargin: 0;\ncolor: orange;\n`\nexport const Thumb = styled.div`\nwidth: 100%;\n`","\nimport PropTypes from 'prop-types';\nimport noimage from '../../images/noimage.jpg'\nimport {List, ListItem, Image,Title, Text,Thumb,StyledNavLink} from './CastList.styled'\nexport default function CastList({ cast }) {\n       return (\n        <List>\n           {cast.map(({ id, name, character, profile_path }) => {\n                console.log(profile_path)\n               return (\n                   <StyledNavLink to={`/actor/${id}`}>\n                        <ListItem key={id}>\n                       <Thumb>{profile_path === null\n                            ? <Image src={noimage} alt=\"noimage\"></Image>\n                            : <Image src={`https://image.tmdb.org/t/p/w500/${profile_path}`} alt={name}></Image>}</Thumb> \n                        <Title>{name}</Title>\n                        <Text>{character}</Text>\n                    </ListItem>\n                    </StyledNavLink>\n                   \n                )\n            })}\n       </List>\n    )\n}\n\nCastList.propTypes = {\n    cast: PropTypes.array,\n}"],"names":["List","styled","_templateObject","_taggedTemplateLiteral","StyledNavLink","NavLink","_templateObject2","ListItem","_templateObject3","Image","_templateObject4","Title","_templateObject5","Text","_templateObject6","Thumb","_templateObject7","CastList","_ref","cast","_jsx","children","map","_ref2","id","name","character","profile_path","console","log","to","concat","_jsxs","src","noimage","alt"],"sourceRoot":""}